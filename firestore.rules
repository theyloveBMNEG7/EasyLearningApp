rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow teachers and admins to read student profiles for class management
      allow read: if request.auth != null &&
        (getUserRole(request.auth.uid) == 'teacher' || getUserRole(request.auth.uid) == 'admin');
    }

    // Classes collection - role-based access
    match /classes/{classId} {
      // Teachers can create and manage their own classes
      allow read, write: if request.auth != null &&
        (resource.data.teacherId == request.auth.uid || getUserRole(request.auth.uid) == 'admin');

      // Students can read classes they're enrolled in
      allow read: if request.auth != null &&
        (getUserRole(request.auth.uid) == 'student' &&
         request.auth.uid in resource.data.enrolledStudents);
    }

    // Tutorials and content - teachers can create, students can read
    match /tutorials/{tutorialId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        (getUserRole(request.auth.uid) == 'teacher' || getUserRole(request.auth.uid) == 'admin');
    }

    // Quiz results - students can only access their own results
    match /quiz_results/{resultId} {
      allow read, write: if request.auth != null &&
        resource.data.studentId == request.auth.uid;

      // Teachers can read results for their students
      allow read: if request.auth != null &&
        (getUserRole(request.auth.uid) == 'teacher' || getUserRole(request.auth.uid) == 'admin');
    }

    // Chat messages - authenticated users can read/write
    match /chat_messages/{messageId} {
      allow read, write: if request.auth != null;
    }

    // Admin-only collections
    match /admin/{document} {
      allow read, write: if request.auth != null &&
        getUserRole(request.auth.uid) == 'admin';
    }

    // Helper function to get user role
    function getUserRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
  }
}
